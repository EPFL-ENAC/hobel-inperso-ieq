{
  "__inputs": [
    {
      "name": "DS_INFLUXDB",
      "label": "influxdb",
      "description": "",
      "type": "datasource",
      "pluginId": "influxdb",
      "pluginName": "InfluxDB"
    }
  ],
  "__elements": {},
  "__requires": [
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "10.4.2"
    },
    {
      "type": "datasource",
      "id": "influxdb",
      "name": "InfluxDB",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "table",
      "name": "Table",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": null,
  "links": [],
  "panels": [
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 16,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 1,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "10.4.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "query": "// from(bucket: \"bucket\")\r\n//  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n//  |> filter(fn: (r) => r[\"_measurement\"] =~ /${brand:regex}/)\r\n//  |> filter(fn: (r) => r[\"_field\"] =~ /${field:regex}/)\r\n//  |> filter(fn: (r) => r[\"device\"] =~ /${device:regex}/)\r\n//  |> filter(fn: (r) => r[\"location\"] =~ /${location:regex}/)\r\n//  |> filter(fn: (r) => r[\"floor\"] =~ /${floor:regex}/)\r\n\r\nimport \"influxdata/influxdb/schema\"\r\nimport \"join\"\r\n\r\n// Get the list of all devices\r\nallDevices = schema.tagValues(\r\n  bucket: \"bucket\",\r\n  tag: \"device\",\r\n  predicate: (r) => r[\"_measurement\"] =~ /${brand:regex}/,\r\n  start: 0,\r\n  stop: now(),\r\n)\r\n\r\n// Get the list of devices with data in the last 18 hours\r\nactiveDevices = schema.tagValues(\r\n  bucket: \"bucket\",\r\n  tag: \"device\",\r\n  predicate: (r) => r[\"_measurement\"] =~ /${brand:regex}/,\r\n  start: -18h,\r\n  stop: now(),\r\n)\r\n\r\n// Convert device lists to tables for joining\r\nallDevicesTable = allDevices |> map(fn: (r) => ({ device: r._value }))\r\nactiveDevicesTable = activeDevices |> map(fn: (r) => ({ device: r._value }))\r\n\r\ninactiveDevices = join.left(\r\n  left: allDevices,\r\n  right: activeDevices,\r\n  on: (l, r) => l._value == r._value,\r\n  as: (l, r) => ({ device: l._value, device_or_null: r._value })\r\n) |> filter(fn: (r) => not exists r.device_or_null)\r\n  |> map(fn: (r) => ({ device: r.device }))\r\n\r\ninactiveDevices",
          "refId": "A"
        }
      ],
      "title": "List of inactive devices (last 18 hours)",
      "type": "table"
    }
  ],
  "schemaVersion": 39,
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": "import \"influxdata/influxdb/v1\"\r\nv1.measurements(bucket: v.bucket)\r\n  |> filter(fn: (r) => r._value != \"qualtrics\")",
        "hide": 0,
        "includeAll": false,
        "label": "Brand",
        "multi": true,
        "name": "brand",
        "options": [],
        "query": "import \"influxdata/influxdb/v1\"\r\nv1.measurements(bucket: v.bucket)\r\n  |> filter(fn: (r) => r._value != \"qualtrics\")",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-7d",
    "to": "now"
  },
  "timepicker": {
    "hidden": true
  },
  "timezone": "utc",
  "title": "Sensor status",
  "uid": "adlyhmyyhcutcf",
  "version": 3,
  "weekStart": "monday"
}
